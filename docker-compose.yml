services:

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=jd1pzuRtQ4SzYETr1EBg8Q
    volumes:
      - kafka:/bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server kafka:9092 || exit 1
      interval: 10s
      timeout: 3s
      retries: 3

  db:
    image: postgres:17.0
    restart: always
    ports:
      - '10734:5432'
    volumes:
      - db:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"  ]
      interval: 10s
      timeout: 3s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    ports:
      - "9200:9200"
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      xpack.security.enabled: "true"
      xpack.security.http.ssl.enabled: "false"
      ELASTIC_PASSWORD: "elastic" 
    healthcheck:
      test: curl -u elastic:elastic http://elasticsearch:9200
      interval: 30s
      retries: 5
      start_period: 30s
    volumes:
      - esdata:/usr/share/elasticsearch/data
   
  elastic-search-service:
    build: ./elastic-search-service
    ports: 
      - "8000:8000"
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-service:8761/eureka
    volumes:
      - ./data/media:/data/media/
      - ./data/audio:/data/audio/
       
  posts-service:
    build: ./posts-service
    ports:
      - "9000:9000"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/post-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-service:8761/eureka
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./data/media:/data/media/
  
  users-service:
    build: ./users-service
    ports:
      - "9090:9090"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/user-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-service:8761/eureka

  naming-service:
    build: ./naming-service
    ports:
      - "8761:8761"
  
  api-gateway:
    build: ./gateway-service
    ports:
      - "8765:8765"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-service:8761/eureka

volumes:
  kafka:
    driver: local
  esdata:
    driver: local
  db:
    driver: local
  data:
    driver: local
